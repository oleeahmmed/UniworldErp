# Generated by Django 5.1.4 on 2025-08-11 09:51

from django.db import migrations, models


def set_default_phone_numbers(apps, schema_editor):
    """Set default phone numbers for existing CustomerVendor records"""
    CustomerVendor = apps.get_model('uniworlderp', 'CustomerVendor')
    
    # Update existing records that don't have phone_number set
    for customer_vendor in CustomerVendor.objects.filter(phone_number__isnull=True):
        # If they have a whatsapp_number, use that as phone_number
        if customer_vendor.whatsapp_number:
            customer_vendor.phone_number = customer_vendor.whatsapp_number
        else:
            # Set a placeholder for records without any phone number
            customer_vendor.phone_number = '000-000-0000'
        customer_vendor.save()
    
    # Also handle empty string phone numbers
    for customer_vendor in CustomerVendor.objects.filter(phone_number=''):
        if customer_vendor.whatsapp_number:
            customer_vendor.phone_number = customer_vendor.whatsapp_number
        else:
            customer_vendor.phone_number = '000-000-0000'
        customer_vendor.save()


def reverse_phone_number_defaults(apps, schema_editor):
    """Reverse the phone number default setting"""
    CustomerVendor = apps.get_model('uniworlderp', 'CustomerVendor')
    # Remove placeholder phone numbers
    CustomerVendor.objects.filter(phone_number='000-000-0000').update(phone_number=None)


class Migration(migrations.Migration):

    dependencies = [
        ('uniworlderp', '0037_add_customer_vendor_fields'),
    ]

    operations = [
        migrations.RunPython(set_default_phone_numbers, reverse_phone_number_defaults),
        migrations.AlterField(
            model_name='customervendor',
            name='phone_number',
            field=models.CharField(max_length=15, verbose_name='Phone Number'),
        ),
    ]
