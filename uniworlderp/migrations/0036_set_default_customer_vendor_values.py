# Generated by Django 5.1.4 on 2025-08-11 09:39

from django.db import migrations


def set_default_values(apps, schema_editor):
    """Set default values for existing CustomerVendor records"""
    CustomerVendor = apps.get_model('uniworlderp', 'CustomerVendor')
    
    # Update existing records that don't have mobile_number set
    # Copy phone_number to mobile_number if mobile_number is empty and phone_number exists
    for customer_vendor in CustomerVendor.objects.filter(mobile_number__isnull=True):
        if customer_vendor.phone_number:
            customer_vendor.mobile_number = customer_vendor.phone_number
        else:
            # Set a placeholder for records without any phone number
            customer_vendor.mobile_number = ''
        customer_vendor.save()
    
    # business_type already has a default value of 'others', so no need to update


def reverse_default_values(apps, schema_editor):
    """Reverse the default value setting (optional)"""
    # This is optional since we're just setting default values
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('uniworlderp', '0035_add_customer_vendor_fields'),
    ]

    operations = [
        migrations.RunPython(set_default_values, reverse_default_values),
    ]
